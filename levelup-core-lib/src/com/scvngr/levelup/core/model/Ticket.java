// Generated by delombok at Wed Mar 05 13:54:15 HST 2014
/*
 * Copyright 2013-2014 SCVNGR, Inc., D.B.A. LevelUp. All rights reserved.
 */
package com.scvngr.levelup.core.model;

import android.os.Parcel;
import android.os.Parcelable;
import com.scvngr.levelup.core.annotation.LevelUpApi;
import com.scvngr.levelup.core.annotation.LevelUpApi.Contract;
import com.scvngr.levelup.core.annotation.NonNull;
import com.scvngr.levelup.core.util.NullUtils;
import net.jcip.annotations.Immutable;
// The code below will be machine-processed.
// CHECKSTYLE:OFF

/**
 * A support ticket.
 */
@Immutable
@LevelUpApi(contract = Contract.INTERNAL)
public final class Ticket implements Parcelable {
    
    /**
     * Parcelable creator.
     */
    @NonNull
    public static final Creator<Ticket> CREATOR = new Creator<Ticket>(){


        @Override
        public Ticket createFromParcel(final Parcel source) {
            return new Ticket(NullUtils.nonNullContract(source));
        }

        @Override
        public Ticket[] newArray(final int size) {
            return new Ticket[size];
        }
    };
    
    /**
     * Ticket body.
     */
    @NonNull
    private final String body;

    /**
     * Construct from a parcel.
     *
     * @param in parcel to read from.
     */
    public Ticket(@NonNull final Parcel in) {
        body = NullUtils.nonNullContract(in.readString());
    }

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(final Parcel dest, final int flags) {
        dest.writeString(body);
    }

    /**
     * Ticket body.
     */
    @NonNull
    @SuppressWarnings("all")
    public String getBody() {
        return this.body;
    }

    @Override
    @SuppressWarnings("all")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof Ticket)) return false;
        final Ticket other = (Ticket)o;
        final Object this$body = this.getBody();
        final Object other$body = other.getBody();
        if (this$body == null ? other$body != null : !this$body.equals(other$body)) return false;
        return true;
    }

    @Override
    @SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 277;
        int result = 1;
        final Object $body = this.getBody();
        result = result * PRIME + ($body == null ? 0 : $body.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
        return "Ticket(body=" + this.getBody() + ")";
    }

    @SuppressWarnings("all")
    public Ticket(@NonNull final String body) {
        if (body == null) {
            throw new NullPointerException("body");
        }
        this.body = body;
    }
}