// Generated by delombok at Mon Sep 09 14:46:10 EDT 2013
package com.scvngr.levelup.core.model;

import android.os.Parcel;
import android.os.Parcelable;
import net.jcip.annotations.Immutable;
import com.scvngr.levelup.core.annotation.LevelUpApi;
import com.scvngr.levelup.core.annotation.LevelUpApi.Contract;
import com.scvngr.levelup.core.annotation.NonNull;
// The code below will be machine-processed.
// CHECKSTYLE:OFF

/**
 * Model for representing a Scan. Currently, the {@link Scan} can be a code scanned using the camera
 * or a code HTTP hyperlink.
 */
@Immutable
@LevelUpApi(contract = Contract.INTERNAL)
public final class Scan implements Parcelable {
	
	/**
	 * Implements the {@link Parcelable} interface.
	 */
	public static final Creator<Scan> CREATOR = new ScanCreator();
	
	/**
	 * The data that were scanned.
	 */
	@NonNull
	private final String data;
	
	@Override
	public int describeContents() {
		return 0;
	}
	
	@Override
	public void writeToParcel(final Parcel dest, final int flags) {
		((ScanCreator)CREATOR).writeToParcel(dest, flags, this);
	}
	
	/**
	 * Handles parceling for {@link Scan}.
	 */
	@Immutable
	private static final class ScanCreator implements Creator<Scan> {
		
		
		@NonNull
		@Override
		public Scan createFromParcel(final Parcel source) {
			final String data = source.readString();
			return new Scan(data);
		}
		
		@Override
		public Scan[] newArray(final int size) {
			return new Scan[size];
		}
		
		private void writeToParcel(@NonNull final Parcel dest, final int flags, @NonNull final Scan scan) {
			dest.writeString(scan.getData());
		}
	}
	
	/**
	 * The data that were scanned.
	 */
	@NonNull
	@java.lang.SuppressWarnings("all")
	public String getData() {
		return this.data;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof Scan)) return false;
		final Scan other = (Scan)o;
		final java.lang.Object this$data = this.getData();
		final java.lang.Object other$data = other.getData();
		if (this$data == null ? other$data != null : !this$data.equals(other$data)) return false;
		return true;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 31;
		int result = 1;
		final java.lang.Object $data = this.getData();
		result = result * PRIME + ($data == null ? 0 : $data.hashCode());
		return result;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "Scan(data=" + this.getData() + ")";
	}
	
	@java.lang.SuppressWarnings("all")
	public Scan(@NonNull final String data) {
		
		if (data == null) {
			throw new java.lang.NullPointerException("data");
		}
		this.data = data;
	}
}